package main

import (
	"notification_service_webapp/util"
	"os"
	"time"

	"notification_service_webapp/env"

	_ "notification_service_webapp/docs" // docs is generated by Swag CLI, you have to import it.

	ginzap "github.com/gin-contrib/zap"
	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"     // swagger embed files
	ginSwagger "github.com/swaggo/gin-swagger" // gin-swagger middleware
)

// @title Notification Service
// @version 1.0
// @description Notification Service Blueprint.

// @contact.name API Support
// @contact.email syedmrizwan@outlook.com

func main() {
	// for production or release mode
	if env.Env.BuildEnv == util.PRODUCTION {
		gin.SetMode(gin.ReleaseMode)
	}

	r, err := Inject()
	if err != nil {
		os.Exit(1)
	}
	logger := util.GetLogger()

	r.Use(ginzap.Ginzap(logger, time.RFC3339, true))
	r.Use(ginzap.RecoveryWithZap(logger, true))

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	// Route Paths

	err = r.Run(env.Env.ServerHost + ":" + env.Env.ServerPort)

	if err != nil {
		logger.Error(err.Error())
		_ = logger.Sync()
		os.Exit(1)
	}
}
